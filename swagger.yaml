openapi: 3.0.3

info:
  title: "Auth0 API"
  version: "1.0.0"
  description: Learning the Auth0
  contact:
    name: Ashutosh Kushwaha
    email: ashutoshkushwaha81@gmail.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: http://localhost:4000/api/{version}
    description: "Local Development server"
    variables:
      version:
        enum:
          - "v1"
        default: "v1"
  - url: https://auth0-learning.herokuapp.com/api/{version}
    description: "Production Development server"
    variables:
      version:
        enum:
          - "v1"
        default: "v1"

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

    cookieAuth:         # arbitrary name for the security scheme; will be used in the "security" key later
      type: apiKey
      in: cookie
      name: token
    

paths:
  /home:
    get:
      tags:
        - Unprotected
      summary: Return a simple message
      description: returns a json message
      responses:
        200:
          description: "Successful operation"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Hello from Auth0 API"
                example:
                  message: "Hello from Auth0 API"

        400:
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: string
                example: "Bad Request"
        
        500:
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                type: string
                example: "Internal Server Error"

  /register:
    post:
      tags:
        - Unprotected
      summary: Register a new user
      description: Register a new user
      requestBody:
        description: "Register a new user"
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                firstname:
                  type: string
                  example: "Ashutosh"
                lastname:
                  type: string
                  example: "Kushwaha"
                email:
                  type: string
                  example: "test@test.com"
                password:
                  type: string
                  example: "password"

      responses:
        201:
          description: "Successful operation"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "User created successfully"
                example:
                  message: "User created successfully"
        
        400:
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: string
                example: "Bad Request"
              
              example: 
                message: Please enter all fields
        
        500:
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                type: string
                example: "Internal Server Error"

  /login:
    post:
      tags:
        - Unprotected
      summary: Login a user
      description: Login a user, it will return a JWT token
      requestBody:
        description: Enter email and password
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: "test@test.com"
                password:
                  type: string
                  example: "password"
      
      responses:
        200:
          description: >
            Successful 
            The session ID is returned in a cookie named `token`. You need to include this cookie in subsequent requests.
          headers: 
            Set-Cookie:
              schema: 
                type: string
                example: token=abcde12345; Path=/; HttpOnl
          content:
            application/json:
              schema:
                type: object
                properties:
                  _id:
                    type: string
                    example: 8923hakdfk32893h
                  firstname:
                    type: string
                    example: "Ashutosh"
                  lastname:
                    type: string
                    example: "Kushwaha"
                  email:
                    type: string
                    example: "test@test.com"
                  token:
                    type: string
                    example: 392384ja;jfads9893u10384323002834
        
        400:
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: string
                example: "Bad Request"
              
              example: 
                message: Please enter all fields
        
        500:
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                type: string
                example: "Internal Server Error"

  /logout:
    post:
      tags:
        - Protected
      summary: Logout a user
      description: Logout a user
      responses:
        200:
          description: "Successful operation"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Logged out successfully"
                example:
                  message: "Logged out successfully"
        
        400:
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: string
                example: "Bad Request"
              
              example: 
                message: Please enter all fields
        
        401:
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: string
                example: "Unauthorized"
              
              example: 
                message: User is not logged in
        
        500:
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                type: string
                example: "Internal Server Error"

  /dashboard:
    get:
      tags:
        - Protected
      summary: Get user details
      description: Get user details
      security:
        - BearerAuth: []
      responses:
        200:
          description: "Successful operation"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "User details"
                  user:
                    type: object
                    properties:
                      _id:
                        type: string
                        example: 8923hakdfk32893h
                      firstname:
                        type: string
                        example: "Ashutosh"
                      lastname:
                        type: string
                        example: "Kushwaha"
                      email:
                        type: string
                        example: "test@test.com"
                example:
                  message: "User details"
                  user:
                    _id: 8923hakdfk32893h
                    firstname: "Ashutosh"
                    lastname: "Kushwaha"
                    email: "test@test.com"

        400:
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: string
                example: "Bad Request"
              
              example: 
                message: Please enter all fields

        401:
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: string
                example: "Unauthorized"
              
              example: 
                message: You're not authorized to access this resource
        
        500:
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                type: string
                example: "Internal Server Error"
   